using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Ques3
{/// <summary>
/// Custom class for Business Logic
/// </summary>
    class Customer
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public char Gender { get; set; }
        public DateTime DateofBirth { get; set; }
        /// <summary>
        /// Customer Constructor to Assign values. 
        /// </summary>
        /// <param name="id"></param>
        /// <param name="name"></param>
        /// <param name="gender"></param>
        /// <param name="dateofBirth"></param>
        public Customer(int id, string name, char gender, DateTime dateofBirth)
        {
            this.Id = id;
            this.Name = name;
            this.Gender = gender;
            this.DateofBirth = dateofBirth;
        }
        /// <summary>
        /// method to addCustomer
        /// </summary>
        /// <param name="custObj"></param>
        /// <returns></returns>
        public bool AddCustomer(Customer custObj)
        {
            bool flag = true;
            if (counter < customers.Length)
            {
                customers[counter] = custObj; counter++;
            }
            else
            {
                WriteLog("customer Colection is full");
            }
            return flag;
        }

        // Solid Principle of S => Single Reponsibility Principle 
        //AddCustomer method should be in Customer class...
        // values to be initilized in constructor. 

        static Customer[] customers;
        int counter;
        string path;

        /// <summary>
        /// WriteLog to Write Messages to file specified
        /// </summary>
        /// <param name="message"></param>
        public void WriteLog(String message)
        {
            StreamWriter sw = new StreamWriter(path);
            sw.WriteLine(message);
            sw.Close();
        }
        /// <summary>
        /// Initilize the no.of customers (constructor)
        /// </summary>
        /// <param name="size"></param>

        public Customer(int size)
        {
            customers = new Customer[size];
        }
        static Customer()
        {
            customers = null;
        }
        public Customer()
        {
            counter = 0;
            path = "C:\\CustomerLog.txt";
        }

        // Removing The CustomerBo class, and placing all functionalities in Customer class
        // As Customer class never depends on any other entity class. 
    }
  
    class Program
    {
        /// <summary>
        /// Entry Point.
        /// </summary>
        static void Main()
        {
            Customer c = new Customer(1, "Karthik", 'M', DateTime.Parse("1/23/1977"));
            Customer cbo = new Customer(3);
            if (cbo.AddCustomer(c))
                Console.WriteLine("Customer Added");
            else
                Console.WriteLine("Oops something went wrong.Check the log file");
        }
    }
}