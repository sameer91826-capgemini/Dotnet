//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Capgemini.PolicyEndorsement.DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PolicyEntities : DbContext
    {
        public PolicyEntities()
            : base("name=PolicyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<int>> prcAgeDob(string customerNumber)
        {
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("customerNumber", customerNumber) :
                new ObjectParameter("customerNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prcAgeDob", customerNumberParameter);
        }
    
        public virtual ObjectResult<string> prccustIDGen(string policyID)
        {
            var policyIDParameter = policyID != null ?
                new ObjectParameter("policyID", policyID) :
                new ObjectParameter("policyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prccustIDGen", policyIDParameter);
        }
    
        public virtual ObjectResult<prcCustomerDetails_Result> prcCustomerDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcCustomerDetails_Result>("prcCustomerDetails");
        }
    
        public virtual ObjectResult<string> prcCustomerID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcCustomerID");
        }
    
        public virtual int prcCustomerInsert(string customerName, string address, string telephone, string gender, Nullable<System.DateTime> dob, string smoker, string hobbies)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var smokerParameter = smoker != null ?
                new ObjectParameter("smoker", smoker) :
                new ObjectParameter("smoker", typeof(string));
    
            var hobbiesParameter = hobbies != null ?
                new ObjectParameter("hobbies", hobbies) :
                new ObjectParameter("hobbies", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomerInsert", customerNameParameter, addressParameter, telephoneParameter, genderParameter, dobParameter, smokerParameter, hobbiesParameter);
        }
    
        public virtual int prcCustomerUpdate(string customernumber, Nullable<System.DateTime> dob, string gender, string smoker, string address, string telephone)
        {
            var customernumberParameter = customernumber != null ?
                new ObjectParameter("customernumber", customernumber) :
                new ObjectParameter("customernumber", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var smokerParameter = smoker != null ?
                new ObjectParameter("smoker", smoker) :
                new ObjectParameter("smoker", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomerUpdate", customernumberParameter, dobParameter, genderParameter, smokerParameter, addressParameter, telephoneParameter);
        }
    
        public virtual ObjectResult<prcEndorsementDetails_Result> prcEndorsementDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcEndorsementDetails_Result>("prcEndorsementDetails");
        }
    
        public virtual ObjectResult<prcEndorsementDetailsCust_Result> prcEndorsementDetailsCust(string customernumber)
        {
            var customernumberParameter = customernumber != null ?
                new ObjectParameter("customernumber", customernumber) :
                new ObjectParameter("customernumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcEndorsementDetailsCust_Result>("prcEndorsementDetailsCust", customernumberParameter);
        }
    
        public virtual int prcEndorsementInsert(string policyID, string productType, string productName, string insuredName, Nullable<int> insuredAge, Nullable<System.DateTime> dob, string gender, string nominee, string relation, string smoker, string address, string telephone, string premiumFrequency)
        {
            var policyIDParameter = policyID != null ?
                new ObjectParameter("policyID", policyID) :
                new ObjectParameter("policyID", typeof(string));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("productType", productType) :
                new ObjectParameter("productType", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var insuredNameParameter = insuredName != null ?
                new ObjectParameter("insuredName", insuredName) :
                new ObjectParameter("insuredName", typeof(string));
    
            var insuredAgeParameter = insuredAge.HasValue ?
                new ObjectParameter("insuredAge", insuredAge) :
                new ObjectParameter("insuredAge", typeof(int));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var nomineeParameter = nominee != null ?
                new ObjectParameter("nominee", nominee) :
                new ObjectParameter("nominee", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("relation", relation) :
                new ObjectParameter("relation", typeof(string));
    
            var smokerParameter = smoker != null ?
                new ObjectParameter("smoker", smoker) :
                new ObjectParameter("smoker", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var premiumFrequencyParameter = premiumFrequency != null ?
                new ObjectParameter("premiumFrequency", premiumFrequency) :
                new ObjectParameter("premiumFrequency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcEndorsementInsert", policyIDParameter, productTypeParameter, productNameParameter, insuredNameParameter, insuredAgeParameter, dobParameter, genderParameter, nomineeParameter, relationParameter, smokerParameter, addressParameter, telephoneParameter, premiumFrequencyParameter);
        }
    
        public virtual ObjectResult<prcEndorsementPolicyIDDetails_Result> prcEndorsementPolicyIDDetails(string policyID)
        {
            var policyIDParameter = policyID != null ?
                new ObjectParameter("policyID", policyID) :
                new ObjectParameter("policyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcEndorsementPolicyIDDetails_Result>("prcEndorsementPolicyIDDetails", policyIDParameter);
        }
    
        public virtual int prcEndorsementUpdateDetails(string policyID, string insuredName, Nullable<int> insuredAge, Nullable<System.DateTime> dob, string gender, string nominee, string relation, string smoker, string address, string telephone, string premiumFrequency)
        {
            var policyIDParameter = policyID != null ?
                new ObjectParameter("policyID", policyID) :
                new ObjectParameter("policyID", typeof(string));
    
            var insuredNameParameter = insuredName != null ?
                new ObjectParameter("insuredName", insuredName) :
                new ObjectParameter("insuredName", typeof(string));
    
            var insuredAgeParameter = insuredAge.HasValue ?
                new ObjectParameter("insuredAge", insuredAge) :
                new ObjectParameter("insuredAge", typeof(int));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var nomineeParameter = nominee != null ?
                new ObjectParameter("nominee", nominee) :
                new ObjectParameter("nominee", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("relation", relation) :
                new ObjectParameter("relation", typeof(string));
    
            var smokerParameter = smoker != null ?
                new ObjectParameter("smoker", smoker) :
                new ObjectParameter("smoker", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var premiumFrequencyParameter = premiumFrequency != null ?
                new ObjectParameter("premiumFrequency", premiumFrequency) :
                new ObjectParameter("premiumFrequency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcEndorsementUpdateDetails", policyIDParameter, insuredNameParameter, insuredAgeParameter, dobParameter, genderParameter, nomineeParameter, relationParameter, smokerParameter, addressParameter, telephoneParameter, premiumFrequencyParameter);
        }
    
        public virtual int prcLoginCheck(string userName, string password, ObjectParameter rES)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcLoginCheck", userNameParameter, passwordParameter, rES);
        }
    
        public virtual ObjectResult<prcLoginDetails_Result> prcLoginDetails(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcLoginDetails_Result>("prcLoginDetails", usernameParameter, passwordParameter);
        }
    
        public virtual int prcLoginGen(string customerNumber, string loginID, string password)
        {
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("customerNumber", customerNumber) :
                new ObjectParameter("customerNumber", typeof(string));
    
            var loginIDParameter = loginID != null ?
                new ObjectParameter("loginID", loginID) :
                new ObjectParameter("loginID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcLoginGen", customerNumberParameter, loginIDParameter, passwordParameter);
        }
    
        public virtual int prcPolicyInsert(string insuredName, Nullable<int> insuredAge, string nominee, string relation, string premiumFrequency, string customernumber, string productID)
        {
            var insuredNameParameter = insuredName != null ?
                new ObjectParameter("insuredName", insuredName) :
                new ObjectParameter("insuredName", typeof(string));
    
            var insuredAgeParameter = insuredAge.HasValue ?
                new ObjectParameter("insuredAge", insuredAge) :
                new ObjectParameter("insuredAge", typeof(int));
    
            var nomineeParameter = nominee != null ?
                new ObjectParameter("nominee", nominee) :
                new ObjectParameter("nominee", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("relation", relation) :
                new ObjectParameter("relation", typeof(string));
    
            var premiumFrequencyParameter = premiumFrequency != null ?
                new ObjectParameter("premiumFrequency", premiumFrequency) :
                new ObjectParameter("premiumFrequency", typeof(string));
    
            var customernumberParameter = customernumber != null ?
                new ObjectParameter("customernumber", customernumber) :
                new ObjectParameter("customernumber", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcPolicyInsert", insuredNameParameter, insuredAgeParameter, nomineeParameter, relationParameter, premiumFrequencyParameter, customernumberParameter, productIDParameter);
        }
    
        public virtual ObjectResult<prcPolicySearchCust_Result> prcPolicySearchCust(string customerNumber)
        {
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("customerNumber", customerNumber) :
                new ObjectParameter("customerNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcPolicySearchCust_Result>("prcPolicySearchCust", customerNumberParameter);
        }
    
        public virtual ObjectResult<prcPolicySearchID_Result> prcPolicySearchID(string policyID)
        {
            var policyIDParameter = policyID != null ?
                new ObjectParameter("policyID", policyID) :
                new ObjectParameter("policyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcPolicySearchID_Result>("prcPolicySearchID", policyIDParameter);
        }
    
        public virtual ObjectResult<prcPolicySearchName_Result> prcPolicySearchName(string customerName, Nullable<System.DateTime> dob)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("customerName", customerName) :
                new ObjectParameter("customerName", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcPolicySearchName_Result>("prcPolicySearchName", customerNameParameter, dobParameter);
        }
    
        public virtual int prcPolicyUpdate(string policyID, string insuredName, Nullable<int> insuredAge, string nominee, string relation, string premiumFrequency)
        {
            var policyIDParameter = policyID != null ?
                new ObjectParameter("policyID", policyID) :
                new ObjectParameter("policyID", typeof(string));
    
            var insuredNameParameter = insuredName != null ?
                new ObjectParameter("insuredName", insuredName) :
                new ObjectParameter("insuredName", typeof(string));
    
            var insuredAgeParameter = insuredAge.HasValue ?
                new ObjectParameter("insuredAge", insuredAge) :
                new ObjectParameter("insuredAge", typeof(int));
    
            var nomineeParameter = nominee != null ?
                new ObjectParameter("nominee", nominee) :
                new ObjectParameter("nominee", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("relation", relation) :
                new ObjectParameter("relation", typeof(string));
    
            var premiumFrequencyParameter = premiumFrequency != null ?
                new ObjectParameter("premiumFrequency", premiumFrequency) :
                new ObjectParameter("premiumFrequency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcPolicyUpdate", policyIDParameter, insuredNameParameter, insuredAgeParameter, nomineeParameter, relationParameter, premiumFrequencyParameter);
        }
    
        public virtual ObjectResult<string> prcProductID(string customerNumber)
        {
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("customerNumber", customerNumber) :
                new ObjectParameter("customerNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("prcProductID", customerNumberParameter);
        }
    
        public virtual int prcProductInsert(string customerNumber, string productName, string productType)
        {
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("customerNumber", customerNumber) :
                new ObjectParameter("customerNumber", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var productTypeParameter = productType != null ?
                new ObjectParameter("productType", productType) :
                new ObjectParameter("productType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcProductInsert", customerNumberParameter, productNameParameter, productTypeParameter);
        }
    
        public virtual int prcStatusupdate(Nullable<int> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("transactionID", transactionID) :
                new ObjectParameter("transactionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcStatusupdate", transactionIDParameter);
        }
    
        public virtual int prcStatusUpdateddd(Nullable<int> transactionID, string currentstatus)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("transactionID", transactionID) :
                new ObjectParameter("transactionID", typeof(int));
    
            var currentstatusParameter = currentstatus != null ?
                new ObjectParameter("currentstatus", currentstatus) :
                new ObjectParameter("currentstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcStatusUpdateddd", transactionIDParameter, currentstatusParameter);
        }
    
        public virtual int prcTransactionDetails(Nullable<int> transactionID, string policyID, string insuredName, Nullable<int> insuredAge, Nullable<System.DateTime> dob, string gender, string nominee, string relation, string smoker, string address, string telephone, string premiumFrequency, Nullable<int> statusID, string currentStatus)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("transactionID", transactionID) :
                new ObjectParameter("transactionID", typeof(int));
    
            var policyIDParameter = policyID != null ?
                new ObjectParameter("policyID", policyID) :
                new ObjectParameter("policyID", typeof(string));
    
            var insuredNameParameter = insuredName != null ?
                new ObjectParameter("insuredName", insuredName) :
                new ObjectParameter("insuredName", typeof(string));
    
            var insuredAgeParameter = insuredAge.HasValue ?
                new ObjectParameter("insuredAge", insuredAge) :
                new ObjectParameter("insuredAge", typeof(int));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var nomineeParameter = nominee != null ?
                new ObjectParameter("nominee", nominee) :
                new ObjectParameter("nominee", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("relation", relation) :
                new ObjectParameter("relation", typeof(string));
    
            var smokerParameter = smoker != null ?
                new ObjectParameter("smoker", smoker) :
                new ObjectParameter("smoker", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("telephone", telephone) :
                new ObjectParameter("telephone", typeof(string));
    
            var premiumFrequencyParameter = premiumFrequency != null ?
                new ObjectParameter("premiumFrequency", premiumFrequency) :
                new ObjectParameter("premiumFrequency", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("statusID", statusID) :
                new ObjectParameter("statusID", typeof(int));
    
            var currentStatusParameter = currentStatus != null ?
                new ObjectParameter("currentStatus", currentStatus) :
                new ObjectParameter("currentStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTransactionDetails", transactionIDParameter, policyIDParameter, insuredNameParameter, insuredAgeParameter, dobParameter, genderParameter, nomineeParameter, relationParameter, smokerParameter, addressParameter, telephoneParameter, premiumFrequencyParameter, statusIDParameter, currentStatusParameter);
        }
    
        public virtual ObjectResult<prcTransactionDetailsID_Result> prcTransactionDetailsID(string customerNumber)
        {
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("customerNumber", customerNumber) :
                new ObjectParameter("customerNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcTransactionDetailsID_Result>("prcTransactionDetailsID", customerNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> prctransactionID(string policyID)
        {
            var policyIDParameter = policyID != null ?
                new ObjectParameter("policyID", policyID) :
                new ObjectParameter("policyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("prctransactionID", policyIDParameter);
        }
    
        public virtual ObjectResult<prcTransDetails_Result> prcTransDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcTransDetails_Result>("prcTransDetails");
        }
    }
}
